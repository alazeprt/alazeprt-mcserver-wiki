import{_ as o,c as a,o as t,a0 as l}from"./chunks/framework.CEeX5LuZ.js";const s=JSON.parse('{"title":"数据类型","description":"","frontmatter":{},"headers":[],"relativePath":"config-format/data-type.md","filePath":"config-format/data-type.md"}'),r={name:"config-format/data-type.md"};function d(c,e,i,u,n,q){return t(),a("div",null,e[0]||(e[0]=[l('<h1 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h1><p>一般的配置文件的数据类型有以下几种:</p><ul><li>对象 (object)</li><li>数组 (array / list)</li><li>纯量 <ul><li>字符串 (string)</li><li>整数 (integer)</li><li>浮点数 (即小数, double/float)</li><li>布尔值 (可为true/false, true意为真 (开启), false意为假 (关闭), boolean)</li><li>空值 (null)</li></ul></li></ul><h2 id="对象" tabindex="-1">对象 <a class="header-anchor" href="#对象" aria-label="Permalink to &quot;对象&quot;">​</a></h2><p>对象可以简单理解成一个映射结构, 分为值和键, 值是字符串, 键是另一个对象 (可再分)</p><p>如在 <code>{&quot;person&quot;: {&quot;name&quot;: &quot;villager&quot;, &quot;age&quot;: 18}}</code> 中, <code>person</code> 配置项是一个对象, 它的键是字符串 <code>person</code>, 值是 <code>{&quot;name&quot;: &quot;villager&quot;, &quot;age&quot;: 18}</code> 是一个对象</p><h2 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">​</a></h2><p>数组可以理解成一组纯量, 如 <code>[&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;]</code> 是一个数组, 其中包含三个字符串 <code>&quot;apple&quot;</code>, <code>&quot;banana&quot;</code>, <code>&quot;orange&quot;</code></p><h2 id="纯量" tabindex="-1">纯量 <a class="header-anchor" href="#纯量" aria-label="Permalink to &quot;纯量&quot;">​</a></h2><p>顾名思义, 纯量就是一个具体的值 (不可再分), 如 <code>&quot;hello&quot;</code>, <code>123</code>, <code>3.14</code>, <code>true</code>, <code>null</code> 都是纯量</p>',10)]))}const h=o(r,[["render",d]]);export{s as __pageData,h as default};
