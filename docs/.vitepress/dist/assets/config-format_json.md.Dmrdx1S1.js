import{_ as n,c as a,o as l,a0 as o}from"./chunks/framework.CEeX5LuZ.js";const y=JSON.parse('{"title":"JSON","description":"","frontmatter":{},"headers":[],"relativePath":"config-format/json.md","filePath":"config-format/json.md"}'),e={name:"config-format/json.md"};function p(c,s,t,r,F,D){return l(),a("div",null,s[0]||(s[0]=[o(`<h1 id="json" tabindex="-1">JSON <a class="header-anchor" href="#json" aria-label="Permalink to &quot;JSON&quot;">​</a></h1><p>JSON 是 Minecraft 使用的存储游戏内容 (如方块模型) 的文件格式, 后缀名一般是 <code>.json</code>, 不同于 YAML, 它使用大括号来表示层级关系</p><p>正常的 JSON 并不支持注释, 使用 Json With Comments (<code>jsonc</code>) 才能使其支持通过 <code>//</code> 注释</p><h2 id="基本数据类型" tabindex="-1">基本数据类型 <a class="header-anchor" href="#基本数据类型" aria-label="Permalink to &quot;基本数据类型&quot;">​</a></h2><div class="language-jsonc line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C792EA;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#FFCB6B;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#F78C6C;">c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 11</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">            &quot;</span><span style="color:#F78C6C;">d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">                &quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">                &quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">            ],</span><span style="color:#676E95;font-style:italic;"> // 数组可以不换行</span></span>
<span class="line"><span style="color:#89DDFF;">        },</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#FFCB6B;">e</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">             &quot;</span><span style="color:#F78C6C;">f</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">警告</p><p>JSON 如果配置项下面还有其它的配置项, 则需要用逗号隔开</p></div><p>这里的 <code>a</code>, <code>b</code>, <code>e</code> 配置项是对象, <code>c</code>, <code>f</code> 配置项是纯量, <code>d</code> 配置项是数组, <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code>, <code>e</code>, <code>f</code> 均为键 (配置项)</p><h2 id="值的数据类型" tabindex="-1">值的数据类型 <a class="header-anchor" href="#值的数据类型" aria-label="Permalink to &quot;值的数据类型&quot;">​</a></h2><div class="language-jsonc line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C792EA;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 字符串, 必须用双引号</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C792EA;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 整数</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C792EA;">c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1.5</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> // 浮点数</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C792EA;">d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true,</span><span style="color:#676E95;font-style:italic;"> // 布尔值</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C792EA;">e</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> null</span><span style="color:#676E95;font-style:italic;"> // 空值</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="表示" tabindex="-1">表示 <a class="header-anchor" href="#表示" aria-label="Permalink to &quot;表示&quot;">​</a></h2><p>与 YAML 相同, 使用 <code>.</code> 来表示层级关系, 如在第一个配置文件中, <code>b</code> 对象可用 <code>a.b</code> 表示, <code>test</code> 字符串的配置项可用 <code>a.e.f</code> 表示</p>`,11)]))}const d=n(e,[["render",p]]);export{y as __pageData,d as default};
